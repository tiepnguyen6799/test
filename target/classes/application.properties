# ===============================
# THYMELEAF
# ===============================
spring.thymeleaf.cache=false
# ===============================
# DATASOURCE
# ===============================

# Set here configurations for the database connection

# Connection url for the database "mycontact"
#spring.datasource.url=jdbc:mysql://localhost:3306/blogdb?useSSL=false

#google sql cloud
#spring.datasource.url=jdbc:mysql://35.200.244.146/springdb?useSSL=false
spring.datasource.url=jdbc:mysql://google/springdb?cloudSqlInstance=demonhom19-199409:asia-south1:springapp&socketFactory=com.google.cloud.sql.mysql.SocketFactory&user=root&password=
# MySQL username and password 
spring.datasource.username=root
spring.datasource.password=

# Keep the connection alive if idle for a long time (needed in production)

# ===============================
# JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql=true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto=update

# Naming strategy
#spring.jpa.hibernate.naming.strategy=org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect